name: AWO Run (Manual)

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Workflow JSON path"
        required: true
        default: "workflows/reviews.json"

jobs:
  run-awo:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.getid.outputs.run_id }}
      audit:  ${{ steps.runstep.outputs.audit }}
    steps:
      - uses: actions/checkout@v4

      - name: Run workflow (simulate audit gate)
        id: runstep
        shell: bash
        run: |
          set +e
          python scripts/awo_run.py "${{ github.event.inputs.workflow_file }}"
          code=$?

          if [ $code -eq 78 ]; then
            echo "audit=PENDING" >> $GITHUB_OUTPUT
            echo "Audit: PENDING â€” waiting for human approval." >> $GITHUB_STEP_SUMMARY
            exit 0
          else
            echo "audit=PASSED" >> $GITHUB_OUTPUT
            echo "Audit: PASSED automatically." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Find latest run id
        id: getid
        shell: bash
        run: |
          RID=$(ls -1dt runs/* | head -n1 | xargs -n1 basename)
          echo "RUN_ID=$RID" >> $GITHUB_ENV
          echo "run_id=$RID" >> $GITHUB_OUTPUT
          echo "Run-ID: $RID" >> $GITHUB_STEP_SUMMARY

      - name: Package artifacts
        if: always()
        run: tar -czf "$RUN_ID.tar.gz" "runs/$RUN_ID"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: awo-run-${{ env.RUN_ID }}
          path: ${{ env.RUN_ID }}.tar.gz

  # Only runs when audit == PENDING
  human-approval:
    if: needs.run-awo.outputs.audit == 'PENDING'
    needs: run-awo
    runs-on: ubuntu-latest
    environment: awo-audit
    steps:
      - name: Await human approval
        run: echo "Approve or reject in the GitHub UI."

  # Finalize path for auto-passed audits
  finalize-auto:
    if: needs.run-awo.outputs.audit == 'PASSED'
    needs: run-awo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: awo-run-${{ needs.run-awo.outputs.run_id }}
          path: .
      - name: Extract run
        run: tar -xzf "${{ needs.run-awo.outputs.run_id }}.tar.gz"
      - name: Commit run to main
        env:
          GH_USER: ${{ github.actor }}
        run: |
          git config user.name "$GH_USER"
          git config user.email "$GH_USER@users.noreply.github.com"
          git pull --ff-only origin main
          git add "runs/${{ needs.run-awo.outputs.run_id }}"
          git commit -m "chore(runs): add ${{ needs.run-awo.outputs.run_id }} [skip ci]" || echo "Nothing to commit"
          git push origin HEAD:main
      - name: Summary
        run: echo "Committed runs/${{ needs.run-awo.outputs.run_id }} (auto-passed)." >> $GITHUB_STEP_SUMMARY

  # Finalize path for human-approved audits
  finalize-approved:
    if: needs.run-awo.outputs.audit == 'PENDING'
    needs: [run-awo, human-approval]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: awo-run-${{ needs.run-awo.outputs.run_id }}
          path: .
      - name: Extract run
        run: tar -xzf "${{ needs.run-awo.outputs.run_id }}.tar.gz"
      - name: Commit run to main
        env:
          GH_USER: ${{ github.actor }}
        run: |
          git config user.name "$GH_USER"
          git config user.email "$GH_USER@users.noreply.github.com"
          git pull --ff-only origin main
          git add "runs/${{ needs.run-awo.outputs.run_id }}"
          git commit -m "chore(runs): add ${{ needs.run-awo.outputs.run_id }} (approved) [skip ci]" || echo "Nothing to commit"
          git push origin HEAD:main
      - name: Summary
        run: echo "Committed runs/${{ needs.run-awo.outputs.run_id }} after human approval." >> $GITHUB_STEP_SUMMARY
