name: AWO Run (Manual)

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Workflow JSON path"
        required: true
        default: "workflows/reviews.json"

# allow this workflow to push to the repo
permissions:
  contents: write

concurrency:
  group: awo-run
  cancel-in-progress: false

jobs:
  run-awo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run workflow (simulate audit gate)
        id: runstep
        shell: bash
        run: |
          set +e
          python scripts/awo_run.py "${{ github.event.inputs.workflow_file }}"
          code=$?
          if [ $code -eq 78 ]; then
            echo "Audit=PENDING" >> $GITHUB_ENV
            echo "Audit: PENDING â€” waiting for human approval." >> $GITHUB_STEP_SUMMARY
            exit 0
          else
            echo "Audit=PASSED" >> $GITHUB_ENV
            echo "Audit: PASSED automatically." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Find latest run id
        id: findrun
        shell: bash
        run: |
          RID=$(ls -1dt runs/* | head -n1 | xargs -n1 basename)
          echo "RUN_ID=$RID" >> $GITHUB_ENV
          echo "run_id=$RID" >> $GITHUB_OUTPUT
          echo "Run-ID: $RID" >> $GITHUB_STEP_SUMMARY

      - name: Upload tar artifact
        if: always()
        run: tar -czf "${RUN_ID}.tar.gz" "runs/${RUN_ID}"

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: awo-run-${{ env.RUN_ID }}
          path: ${{ env.RUN_ID }}.tar.gz

  human-approval:
    needs: run-awo
    if: needs.run-awo.outputs.run_id != '' && needs.run-awo.result == 'success' && env.Audit == 'PENDING'
    runs-on: ubuntu-latest
    environment: awo-audit
    steps:
      - name: Await human approval
        run: echo "Approve or reject this deployment (Environment: awo-audit) to continue."

  finalize-auto:
    needs: run-awo
    if: env.Audit == 'PASSED'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Commit run folder to main (auto)
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git switch "${GITHUB_REF_NAME}"
          echo "Committing runs/${RUN_ID}"
          git add "runs/${RUN_ID}" || true
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "AWO: add ${RUN_ID} (auto-pass)"
          git push origin "${GITHUB_REF_NAME}"

  finalize-approved:
    needs: [run-awo, human-approval]
    if: env.Audit == 'PENDING' && needs.human-approval.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Commit run folder to main (approved)
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git switch "${GITHUB_REF_NAME}"
          echo "Committing runs/${RUN_ID}"
          git add "runs/${RUN_ID}" || true
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "AWO: add ${RUN_ID} (human-approved)"
          git push origin "${GITHUB_REF_NAME}"
