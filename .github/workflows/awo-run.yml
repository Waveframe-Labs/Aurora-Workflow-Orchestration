name: AWO Run (Manual Approve to Commit)

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Workflow JSON path (relative to repo root)"
        required: true
        default: "workflows/multimodel.json"

permissions:
  contents: write

concurrency:
  group: awo-run
  cancel-in-progress: true

jobs:
  run_validate_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Preflight (workflow exists + JSON valid)
        shell: bash
        run: |
          set -euo pipefail
          WF="${{ github.event.inputs.workflow_file }}"
          echo "[AWO] Using workflow: $WF"
          test -f "$WF" || { echo "::error::Workflow file not found: $WF"; exit 1; }
          sudo apt-get update && sudo apt-get install -y jq
          jq . "$WF" >/dev/null

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install jsonschema

      - name: Run AWO
        id: runstep
        shell: bash
        run: |
          set +e
          python scripts/awo_run.py "${{ github.event.inputs.workflow_file }}"
          CODE=$?
          echo "RUNNER_EXIT_CODE=$CODE" >> "$GITHUB_ENV"
          exit 0

      - name: Capture LAST_RUN
        id: cap
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f runs/LAST_RUN ]; then
            echo "::error::runs/LAST_RUN not found (runner may have failed before creating a run)."
            exit 1
          fi
          RID="$(tr -d '\n\r' < runs/LAST_RUN)"
          test -d "runs/$RID" || { echo "::error::Run directory missing: runs/$RID"; exit 1; }
          echo "run_dir=runs/$RID" >> "$GITHUB_OUTPUT"
          echo "RID=$RID" >> "$GITHUB_ENV"
          echo "[AWO] RUN_ID=$RID"

      - name: Validate artifacts against schemas
        shell: bash
        run: |
          set -euo pipefail
          python scripts/validate_run.py "${{ steps.cap.outputs.run_dir }}"

      - name: Upload run artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: awo-run-${{ env.RID }}
          path: |
            ${{ steps.cap.outputs.run_dir }}/run_manifest.json
            ${{ steps.cap.outputs.run_dir }}/provenance.json
            ${{ steps.cap.outputs.run_dir }}/workflow_frozen.json
            ${{ steps.cap.outputs.run_dir }}/report.md
            ${{ steps.cap.outputs.run_dir }}/steps
            ${{ steps.cap.outputs.run_dir }}/artifacts

      - name: Exit with pending when gate triggered
        shell: bash
        run: |
          if [ "${RUNNER_EXIT_CODE:-0}" = "78" ]; then
            echo "::notice::Run is pending human review (audit gate)."
            exit 0
          fi
