name: AWO Run (Manual Approve to Commit)

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Workflow JSON path"
        required: true
        default: "workflows/multimodel.json"

permissions:
  contents: write

concurrency:
  group: awo-run
  cancel-in-progress: false

jobs:
  run_awo:
    name: Run AWO workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Execute workflow
        shell: bash
        run: |
          set +e
          python scripts/awo_run.py "${{ github.event.inputs.workflow_file }}"
          code=$?
          echo "RUNNER_EXIT_CODE=$code" >> $GITHUB_ENV
          if [ "$code" = "78" ]; then
            echo "Audit: PENDING (human approval will be required)" >> $GITHUB_STEP_SUMMARY
          else
            echo "Audit: PASSED (this workflow still pauses for manual approval)" >> $GITHUB_STEP_SUMMARY
          fi
          exit 0

      - name: Capture Run-ID (from breadcrumb)
        id: capture
        run: |
          RID=$(cat runs/LAST_RUN 2>/dev/null || echo "none")
          echo "RUN_ID=$RID" >> $GITHUB_ENV
          echo "Run-ID: $RID" >> $GITHUB_STEP_SUMMARY

      - name: Create payload
        run: tar -czf "${RUN_ID}.tar.gz" "runs/${RUN_ID}"

      - name: Upload payload
        uses: actions/upload-artifact@v4
        with:
          name: awo-run-${{ env.RUN_ID }}
          path: ${{ env.RUN_ID }}.tar.gz

  human_approval:
    needs: run_awo
    runs-on: ubuntu-latest
    environment:
      name: awo-audit
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - run: echo "Manual approval gate â€” approve in Environment 'awo-audit' to continue."

  finalize:
    needs: [run_awo, human_approval]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download run artifact(s)
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract run folder
        shell: bash
        run: |
          set -e
          cd artifacts
          for f in *.tar.gz; do
            [ -f "$f" ] && tar -xzf "$f"
          done
          cd ..
          if [ -d artifacts/runs ]; then
            rsync -a artifacts/runs/ runs/
          fi
          RID=$(cat runs/LAST_RUN 2>/dev/null || echo "none")
          echo "RUN_ID=$RID" >> $GITHUB_ENV
          echo "Finalizing $RID" >> $GITHUB_STEP_SUMMARY

      - name: Commit run to main
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git switch "${GITHUB_REF_NAME}"
          git add "runs/${RUN_ID}" || true
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "AWO: add ${RUN_ID} (human-approved) [skip ci]"
          git push origin "${GITHUB_REF_NAME}"
